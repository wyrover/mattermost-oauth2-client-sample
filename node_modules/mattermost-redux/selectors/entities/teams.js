'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.getJoinableTeams = exports.getMembersInCurrentTeam = exports.getMyTeams = exports.getCurrentTeamStats = exports.getCurrentTeamUrl = exports.isCurrentUserCurrentTeamAdmin = exports.getCurrentTeamMembership = exports.getCurrentTeam = exports.getTeamsList = undefined;
exports.getCurrentTeamId = getCurrentTeamId;
exports.getTeams = getTeams;
exports.getTeamStats = getTeamStats;
exports.getTeamMemberships = getTeamMemberships;
exports.getMembersInTeams = getMembersInTeams;
exports.getTeamMember = getTeamMember;

var _reselect = require('reselect');

var _general = require('./general');

var _user_utils = require('../../utils/user_utils');

function getCurrentTeamId(state) {
    return state.entities.teams.currentTeamId;
} // Copyright (c) 2016-present Mattermost, Inc. All Rights Reserved.
// See License.txt for license information.

function getTeams(state) {
    return state.entities.teams.teams;
}

function getTeamStats(state) {
    return state.entities.teams.stats;
}

function getTeamMemberships(state) {
    return state.entities.teams.myMembers;
}

function getMembersInTeams(state) {
    return state.entities.teams.membersInTeam;
}

var getTeamsList = exports.getTeamsList = (0, _reselect.createSelector)(getTeams, function (teams) {
    return Object.values(teams);
});

var getCurrentTeam = exports.getCurrentTeam = (0, _reselect.createSelector)(getTeams, getCurrentTeamId, function (teams, currentTeamId) {
    return teams[currentTeamId];
});

var getCurrentTeamMembership = exports.getCurrentTeamMembership = (0, _reselect.createSelector)(getCurrentTeamId, getTeamMemberships, function (currentTeamId, teamMemberships) {
    return teamMemberships[currentTeamId];
});

var isCurrentUserCurrentTeamAdmin = exports.isCurrentUserCurrentTeamAdmin = (0, _reselect.createSelector)(getCurrentTeamMembership, function (member) {
    if (member) {
        var roles = member.roles || '';
        return (0, _user_utils.isTeamAdmin)(roles);
    }
    return false;
});

var getCurrentTeamUrl = exports.getCurrentTeamUrl = (0, _reselect.createSelector)(_general.getCurrentUrl, getCurrentTeam, function (currentUrl, currentTeam) {
    return currentUrl + '/' + currentTeam.name;
});

var getCurrentTeamStats = exports.getCurrentTeamStats = (0, _reselect.createSelector)(getCurrentTeamId, getTeamStats, function (currentTeamId, teamStats) {
    return teamStats[currentTeamId];
});

var getMyTeams = exports.getMyTeams = (0, _reselect.createSelector)(getTeams, getTeamMemberships, function (teams, members) {
    return Object.values(teams).filter(function (t) {
        return members[t.id];
    });
});

var getMembersInCurrentTeam = exports.getMembersInCurrentTeam = (0, _reselect.createSelector)(getCurrentTeamId, getMembersInTeams, function (currentTeamId, teamMembers) {
    return teamMembers[currentTeamId];
});

function getTeamMember(state, teamId, userId) {
    var members = getMembersInTeams(state)[teamId];
    if (members) {
        return members[userId];
    }

    return null;
}

var getJoinableTeams = exports.getJoinableTeams = (0, _reselect.createSelector)(getTeams, getTeamMemberships, function (teams, myMembers) {
    var openTeams = {};
    Object.values(teams).forEach(function (t) {
        if (t.allow_open_invite && !myMembers[t.id]) {
            openTeams[t.id] = t;
        }
    });

    return openTeams;
});